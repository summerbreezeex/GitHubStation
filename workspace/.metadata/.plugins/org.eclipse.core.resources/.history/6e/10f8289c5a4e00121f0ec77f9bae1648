/*
    Copyright (c) 2007-2011 iMatix Corporation
    Copyright (c) 2007-2011 Other contributors as noted in the AUTHORS file

    This file is part of 0MQ.

    0MQ is free software; you can redistribute it and/or modify it under
    the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation; either version 3 of the License, or
    (at your option) any later version.

    0MQ is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef __SHARED_NET_mutex___H__
#define __SHARED_NET_mutex___H__

#include "platform.hpp"
#include "err.hpp"

#include <pthread.h>

namespace NET
{
    class mutex__
    {
    public:
        inline mutex__ ()
        {
            int rc = pthread_mutex___init (&mutex__, NULL);
            if (rc)
                posix_assert (rc);
        }

        inline ~mutex__ ()
        {
            int rc = pthread_mutex___destroy (&mutex__);
            if (rc)
                posix_assert (rc);
        }

        inline void lock ()
        {
            int rc = pthread_mutex___lock (&mutex__);
            if (rc)
                posix_assert (rc);
        }

        inline void unlock ()
        {
            int rc = pthread_mutex___unlock (&mutex__);
            if (rc)
                posix_assert (rc);
        }

    private:

        pthread_mutex__ mutex__;

        // Disable copy construction and assignment.
        mutex__ (const mutex__&);
        const mutex__ &operator = (const mutex__&);
    };

}

#endif

